services:
   prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    restart: always
    user: "root:root"
    ports:
      - "9090:9090"
    volumes:
      - ./prometheus:/etc/prometheus
    command:
      - "--config.file=/etc/prometheus/config/prometheus.yml"
      - "--web.enable-lifecycle"
      - "--storage.tsdb.path=/etc/prometheus"
      - "--storage.tsdb.retention.time=31d"
    depends_on:
      - alertmanager
      - snmp-exporter
    networks:
      - my_network

   grafana_db:
    container_name: grafana_db
    volumes:
      - ./mysql:/var/lib/mysql
      - ./mysql:/etc/mysql/conf.d/my.cnf
    image: mysql:latest
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: S3aDolph!n456Sunset
      MYSQL_DATABASE: grafanadb
      MYSQL_USER: grafanauser
      MYSQL_PASSWORD: S3aDolph!n456Sunset
    command:
      - mysqld
      - --character-set-server=utf8mb4
      - --collation-server=utf8mb4_unicode_ci
      - --innodb_monitor_enable=all
      - --max-connections=1001
    networks:
      - my_network

   grafana:
    container_name: grafana
    image: grafana/grafana:latest
    restart: always
    volumes:
      - /docker/grafana:/var/lib/grafana:rw
      - /docker/grafana:/etc/grafana/provisioning/datasources
      - /docker/grafana/conf:/etc/grafana:rw
    environment:
      - GF_DATABASE_HOST=grafana_db:3306
      - GF_DATABASE_PORT=3306
      - GF_DATABASE_NAME=grafanadb
      - GF_DATABASE_USER=grafanauser
      - GF_DATABASE_PASSWORD=S3aDolph!n456Sunset
      - GF_DATABASE_TYPE=mysql
      - GF_DATABASE_MAX_OPEN_CONN=1000
      - GF_RENDERING_SERVER_URL=http://renderer:8081/render
      - GF_RENDERING_CALLBACK_URL=http://localhost:3000/
      - GF_LOG_FILTERS=rendering:debug
#    ports:
#      - "3000:3000"
    depends_on:
      - grafana_db
    user: "root:root"
    networks:
      - my_network

   snmp-exporter:
    image: prom/snmp-exporter:latest
    container_name: snmp-exporter
    restart: always
    user: "root:root"
    volumes:
      - ./snmp-exporter:/etc/snmp-exporter
    command:
      - '--config.file=/etc/snmp-exporter/snmp.yml'
    ports:
      - '0.0.0.0:9116:9116'
    networks:
      - my_network

   blackbox:
    image: prom/blackbox-exporter:latest
    container_name: blackbox
    restart: always
    user: "root:root"
    ports:
      - '9115:9115'
    networks:
      - my_network

   alertmanager:
    image: prom/alertmanager:latest
    container_name: alertmanager
    restart: always
    user: "root:root"
    ports:
      - "9094:9093"
    volumes:
      - "./alertmanager:/config"
      - "./alertmanager:/etc/alertmanager/"
      - "./alertmanager/alertmanager-data:/data"
    command:
      - "--config.file=/etc/alertmanager/alertmanager.yml"
    networks:
      - my_network

   nginx:
    image: nginx:latest
    container_name: nginx
    restart: always
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/conf.d:/etc/nginx/conf.d
      - ./nginx/certs:/etc/nginx/certs
      - ./nginx/vhost.d:/etc/nginx/vhost.d
      - ./nginx/html:/usr/share/nginx/html
    depends_on:
      - grafana
    networks:
      - my_network

networks:
   my_network:
    driver: bridge
    ipam:
      config:
        - subnet: 192.168.10.0/24
